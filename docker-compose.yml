version: '3'
services:
  db:
    image: postgres:latest
    restart: always
    ports:
      - 4001:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "${GREENLIGHT_APP_DB_DSN}", "up"]
    depends_on:
      db:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana

  greenlight_app:
    build: .
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    command: ["./app", "-db-dsn=${GREENLIGHT_APP_DB_DSN}"]
volumes:
  postgres_data:
  prometheus_data:
  grafana-storage:

